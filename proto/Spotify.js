// @generated by protobuf-ts 2.9.1 with parameter long_type_string,output_javascript,optimize_code_size
// @generated from protobuf file "Spotify.proto" (syntax proto3)
// tslint:disable
// @generated by protobuf-ts 2.9.1 with parameter long_type_string,output_javascript,optimize_code_size
// @generated from protobuf file "Spotify.proto" (syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
// @generated message type with reflection information, may provide speed optimized methods
class TrackReply$Type extends MessageType {
    constructor() {
        super("TrackReply", [
            { no: 1, name: "lyrics", kind: "message", T: () => Lyrics }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message TrackReply
 */
export const TrackReply = new TrackReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Lyrics$Type extends MessageType {
    constructor() {
        super("Lyrics", [
            { no: 2, name: "lines", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Lines },
            { no: 9, name: "alternatives", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Alternatives },
            { no: 10, name: "language", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Lyrics
 */
export const Lyrics = new Lyrics$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Lines$Type extends MessageType {
    constructor() {
        super("Lines", [
            { no: 1, name: "startTimeMs", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "words", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Lines
 */
export const Lines = new Lines$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Alternatives$Type extends MessageType {
    constructor() {
        super("Alternatives", [
            { no: 1, name: "language", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "lines", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Alternatives
 */
export const Alternatives = new Alternatives$Type();
